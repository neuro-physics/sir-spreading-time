%% output data config

imgFormat = 'png';
% imgFormat = 'pdf';

saveOutputFigures = true;
% saveOutputFigures = false;

% N = 90; % size of the parcellation of the main results
% sortNodesBy = 'lobe'; % 'lobe' or 'func' or 'funclr'

N = 306; % size of the parcellation of the main results
sortNodesBy = 'func';

plotData = 'zScoreToControls'; % 'raw', 'flip', 'zScoreToControls'
showMTLData = false;
volumeVarName = 'Cavity';
showZScoreEdges = false;

% thetaVal = [0,0.005,0.01,0.015,0.02];
thetaVal = 0.011; % theta_0 = 0.0138190954773869

addpath('func');

nodeLabels = {'Hippocampus_R','Hippocampus_L','Thalamus_R','Thalamus_L','Amygdala_R','Amygdala_L','ParaHippocampal_R','ParaHippocampal_L'};

displayData = { 'raw' }; % 'raw' -> full matrices; and/or 'comm' -> community data

%% input data config

% useFDR = 2; % false, true, or 2; if useFDR == 2, show t-test figures
useFDR = 1; % false, true, or 2; if useFDR == 2, show t-test figures

showDataColor = true; % color z-scores in the surface plots for nodes that pass the t-test
% showDataColor = false; % show only if z-score < or > than 0 for nodes that pass t-test in the surface map

%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%% 
%%%%%%%%%%%%%% the four variables below are used to decide which 'sim_data_*.mat' file (generated by processSpreadingData.m) should be used to plot the figure...
%%%%%%%%%%%%%% so in order to plot a figure with different configuration, you first need to process a new data set and then load it in plot_sim_data_func without relying
%%%%%%%%%%%%%% on the function plot_func.loadPlotData()
%%%%%%%%%%%%%% 
%%%%%%%%%%%%%%%%%%%%%%%%%%%

siFileNameSuffix = '_alphaFDR1e-05';

% siFileNameSuffix = [siFileNameSuffix,'']; % empty or '_postpost' or '_prepost' or '_prepostsim' (postpost compares postopsim and postop; etc)
% groupLabels = { 'FCD_POSTOP', 'FCD_POSTOPSIM', 'FCD_PREOP' }; % list of group labels that are going to be plotted

siFileNameSuffix = [siFileNameSuffix,'_postpost']; % empty or '_postpost' or '_prepost' or '_prepostsim' (postpost compares postopsim and postop; etc)
groupLabels = { 'FCD_POSTOPSIM' };

% siFileNameSuffix = [siFileNameSuffix,'_prepost']; % empty or '_postpost' or '_prepost' or '_prepostsim' (postpost compares postopsim and postop; etc)
% groupLabels = { 'FCD_POSTOP' };

% siFileNameSuffix = [siFileNameSuffix,'_prepostsim']; % empty or '_postpost' or '_prepost' or '_prepostsim' (postpost compares postopsim and postop; etc)
% groupLabels = { 'FCD_POSTOPSIM' };

% useBinarySpTime = true;
useBinarySpTime = false;

splitTTest = true;
% splitTTest = false;

% zScoreIndividually = true;
zScoreIndividually = false;

ttestOnAvg = true;
% ttestOnAvg = false;

odirSuffix = '';
if useFDR, odirSuffix = '_fdr'; end

%% in/out folders

programDir = 'D:\Dropbox\p\postdoc\programs\matlab\sirs';
dataDir = 'D:\Dropbox\p\postdoc\data\sirs\fcd_selected';
if isunix
    programDir = '/host/scarus/local_raid/mauricio/programs/matlab';
    dataDir = '/host/scarus/local_raid/mauricio/data/sirs/fcd_selected';
end